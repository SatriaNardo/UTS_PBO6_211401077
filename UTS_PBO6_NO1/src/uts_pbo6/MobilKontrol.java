/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uts_pbo6;

import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author REPUBLIC OF GAMERS
 */
public class MobilKontrol extends javax.swing.JFrame {
    /**
     * Creates new form MobilKontrol
     */
    int left;
    int speed;
    int right;
    boolean limitCheck = false;
    public MobilKontrol() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftButton = new javax.swing.JButton();
        upButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        speedBar = new javax.swing.JProgressBar();
        speedText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        leftText = new javax.swing.JTextField();
        leftBar = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        rightText = new javax.swing.JTextField();
        rightBar = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 500));

        leftButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uts_pbo6/left.png"))); // NOI18N
        leftButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                leftButtonMousePressed(evt);
            }
        });
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });
        leftButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                leftButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                leftButtonKeyReleased(evt);
            }
        });

        upButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uts_pbo6/up.png"))); // NOI18N
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });
        upButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                upButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                upButtonKeyReleased(evt);
            }
        });

        rightButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uts_pbo6/right.png"))); // NOI18N
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });
        rightButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rightButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rightButtonKeyReleased(evt);
            }
        });

        downButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uts_pbo6/down.png"))); // NOI18N
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });
        downButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                downButtonKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Speed :");

        speedBar.setBackground(new java.awt.Color(255, 204, 204));
        speedBar.setForeground(new java.awt.Color(255, 51, 51));

        speedText.setEditable(false);
        speedText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Left :");

        leftText.setEditable(false);
        leftText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        leftBar.setForeground(new java.awt.Color(0, 255, 204));
        leftBar.setMaximum(90);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Right :");

        rightText.setEditable(false);
        rightText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        rightBar.setForeground(new java.awt.Color(0, 255, 204));
        rightBar.setMaximum(90);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Km/Hour");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Degree");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Degree");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(speedBar, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(leftBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rightBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(leftText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rightText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(speedText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(leftButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(upButton)
                    .addComponent(downButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(speedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(speedBar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(leftText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftBar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightBar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(upButton)
                        .addGap(36, 36, 36)
                        .addComponent(downButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(leftButton)
                            .addComponent(rightButton))))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leftButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_leftButtonKeyPressed
        // TODO add your handling code here:
        if((evt.getKeyCode()==KeyEvent.VK_A) && (limitCheck==false))
        {
            try {
                left = left + 1;
                if(left < 91)
                {
                  leftText.setText(Integer.toString(left));  
                  leftBar.setValue(left);
                }
                else
                {
                    left = 90;
                    limitCheck = true;
                    return;
                }
                Thread.sleep(10);
                
            } catch (InterruptedException ex) {
                Logger.getLogger(MobilKontrol.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_leftButtonKeyPressed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Left is Active");
    }//GEN-LAST:event_leftButtonActionPerformed

    private void leftButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_leftButtonKeyReleased
        // TODO add your handling code here:
        left = Integer.valueOf(leftText.getText());
        if(left != 0)
        {
            for(int i = 0;i<91;i++)
        {
            try {
                left = left - 1;
                limitCheck = false;
                leftText.setText(Integer.toString(left));
                leftBar.setValue(left);
                Thread.sleep(10);
                if (left == 0)
                {
                    return;
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(MobilKontrol.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        } 
    }//GEN-LAST:event_leftButtonKeyReleased

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Front is Active");
    }//GEN-LAST:event_upButtonActionPerformed

    private void leftButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftButtonMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_leftButtonMousePressed

    private void upButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_upButtonKeyPressed
        // TODO add your handling code here:
        if((evt.getKeyCode()==KeyEvent.VK_W) && (limitCheck==false))
        {
            try {
                speed = speed + 1;
                if(speed < 101)
                {
                  speedText.setText(Integer.toString(speed));  
                  speedBar.setValue(speed);
                }
                else
                {
                    speed = 100;
                    limitCheck = true;
                    return;
                }
                Thread.sleep(10);
                
            } catch (InterruptedException ex) {
                Logger.getLogger(MobilKontrol.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_upButtonKeyPressed

    private void upButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_upButtonKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_upButtonKeyReleased

    private void downButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_downButtonKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_S)
        {
        speed = Integer.valueOf(speedText.getText());
        if(speed != 0)
        {
            try {
                speed = speed - 1;
                limitCheck = false;
                speedText.setText(Integer.toString(speed));
                speedBar.setValue(speed);
                Thread.sleep(10);
                if (speed == 0)
                {
                    return;
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(MobilKontrol.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
        }
        
    }//GEN-LAST:event_downButtonKeyPressed

    private void rightButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rightButtonKeyPressed
        // TODO add your handling code here:
        if((evt.getKeyCode()==KeyEvent.VK_D) && (limitCheck==false))
        {
            try {
                right = right + 1;
                if(right < 91)
                {
                  rightText.setText(Integer.toString(right));  
                  rightBar.setValue(right);
                }
                else
                {
                    right = 90;
                    limitCheck = true;
                    return;
                }
                Thread.sleep(10);
                
            } catch (InterruptedException ex) {
                Logger.getLogger(MobilKontrol.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_rightButtonKeyPressed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Right is Active");
    }//GEN-LAST:event_rightButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Back is Active");
    }//GEN-LAST:event_downButtonActionPerformed

    private void rightButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rightButtonKeyReleased
        // TODO add your handling code here:
        right = Integer.valueOf(rightText.getText());
        if(right != 0)
        {
            for(int i = 0;i<91;i++)
        {
            try {
                right = right - 1;
                limitCheck = false;
                rightText.setText(Integer.toString(right));
                rightBar.setValue(right);
                Thread.sleep(10);
                if (right == 0)
                {
                    return;
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(MobilKontrol.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        } 
    }//GEN-LAST:event_rightButtonKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MobilKontrol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MobilKontrol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MobilKontrol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MobilKontrol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MobilKontrol().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton downButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar leftBar;
    private javax.swing.JButton leftButton;
    private javax.swing.JTextField leftText;
    private javax.swing.JProgressBar rightBar;
    private javax.swing.JButton rightButton;
    private javax.swing.JTextField rightText;
    private javax.swing.JProgressBar speedBar;
    private javax.swing.JTextField speedText;
    private javax.swing.JButton upButton;
    // End of variables declaration//GEN-END:variables
}
